{"version":3,"sources":["constants.js","utils/network.js","utils/stringUtils.js","booking/beneficiary.js","booking/slot.js","utils/queryParams.js","webCallback/index.js","assests/questionMark.svg","assests/build4bharat.jpg","stateView/index.js","App.js","reportWebVitals.js","index.js"],"names":["SECRET_KEYS","PROCESS_STAGE","API_URLS","SLOT_FILTER","ERROR_CODE","COWIN_ERROR_CODE","ID_TYPE","INVALID_PHONE_REASONS_TEXT","DEFAULT_AUTO_CALLBACK_STATE","callBackDelayInSeconds","isTimerOn","makePostCall","path","body","stateCallback","token","a","isLoading","Promise","resolve","then","fetch","method","headers","JSON","stringify","response","json","data","error","catch","errorObj","code","errorCode","message","makeGetCall","getFirstName","name","lowerName","_","word","getEditDistance","firstString","secondString","lengthFirstString","lengthSecondString","costs","indexFirst","indexSecond","Math","min","getSlotDateString","today","Date","nextDay","setDate","getDate","dd","mm","getMonth","yyyy","getFullYear","filterBeneficiary","state","beneficiaryList","paramsName","paramsDisplayName","displayName","idType","id_type","id_number","maskedIdNumber","slice","matchedBeneficiaryRecord","beneficiary_reference_id","beneficiaryId","idMatchRecord","entry","entryIdType","photo_id_type","entryIdNumber","verifiedNameMatchedBeneficiary","firstName","profileNameMatchedBeneficiary","verifiedName","beneficiaryNamesLowerCase","verifiedNameLowerCase","bestMatchResults","stringSimilarity","bestMatch","bestMatchIndex","rating","getStringSimilarityBasedBeneficiary","getBeneficiaryDetailsEntity","beneficiary","beneficiary_id","vaccine","vaccination_status","dose1_date","dose2_date","fetchBenficiaries","FETCH_BENEFICIARY","beneficiaryDetails","stage","registeredBeneficiaryList","appointments","getTargetSlotTime","availableSession","slotDate","date","getCurrentDateString","slots","getAvailableVaccineSlot","centerList","lastAttemptedSession","availableSlots","center","sessions","availableSessions","session","centerAvailability","dose1Availability","min_age_limit","session_id","maxAvailabilitySession","targetSlot","push","slot_time","fetchSlots","district","dateString","FETCH_SLOTS","vaccineSlot","getUrlParamsFromObj","obj","qs","_path","_path2","_path3","triggerCallback","callbackDelay","callbackParams","getCallbackParams","appState","getAppState","requestBody","auth_key","phone","registeredPhone","alternatePhone","app_state","queryString","window","setTimeout","location","href","callback","getErrorParams","metaData","getMetaDataParams","baseState","dose_1_date","dose_2_date","err_code","err_message","meta_data","lastAppointment","center_id","center_name","slot","dose","appointment_id","appointmentId","vaccineFee","getVaccineFee","center_address","address","center_district_name","district_name","center_pincode","pincode","vaccine_fee","vaccineFeeRates","selectedVaccineRate","available_beneficiaries","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgQuestionMark","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","getRedirectElement","classes","className","Typography","getAlternateNumberElement","enterAlternatePhoneInitStage","goToHome","Grid","container","justify","alignItems","direction","Button","button","variant","color","fullWidth","onClick","goHomeButton","renderOtpStage","params","retryTime","changeOtp","submitOtp","triggerOtp","retryEnabled","retryTimeString","toISOString","substr","item","lg","Box","fontWeight","my","Link","TextField","maxLength","type","label","value","otp","onChange","e","disabled","getBookingActionElement","bookingAttempt","getRetryElement","renderErrorStage","errorMessage","errCode","NO_BENEFICIARY","getErrorMessage","shajs","require","useStyles","makeStyles","root","backgroundColor","image","overflowY","card","flexGrow","minHeight","margin","padding","position","bottom","marginTop","borderRadius","getRandomSecretKey","index","parseInt","random","withRouter","searchParams","search","ignoreQueryPrefix","initialStage","useState","lastPhone","setState","setRetryTime","setBookingAttempt","autoCallBackState","setAutoCallBackState","updatedState","secretKey","INIT","txnId","otpHash","update","digest","VALIDATE_OTP","scheduleSlot","SCHEDULE","changeRegisteredPhone","submitRegisteredPhone","activePhone","confirmRegisteredPhone","handleBookingFailure","intervalId","clearInterval","useEffect","captcha","renderView","renderSuccessStage","renderVaccinatedStage","alternateNumberElement","renderExistingBookingStage","bookingActionElement","renderBookingFailedStage","renderRegisteredStage","renderNotRegiseteredState","size","renderAlternatePhoneInitState","SvgIcon","component","QuestionIcon","overflow","spacing","xs","renderPhoneNumberConfirmation","getRenderView","errorItem","src","Image","Card","CircularProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"6OACaA,EAAc,CACzB,2FACA,2FACA,2FACA,2FACA,2FACA,4FAGWC,EACL,OADKA,EAEG,eAFHA,EAGQ,oBAHRA,EAIE,cAJFA,EAKD,WALCA,EAME,cANFA,EAOJ,QAPIA,EAQO,mBARPA,EASK,iBATLA,EAUC,aAVDA,EAWC,aAXDA,EAYK,iBAZLA,EAaW,uBAbXA,EAcI,gBAGJC,GAAQ,mBAClBD,EAAqB,2DADH,cAElBA,EAA6B,2DAFX,cAGlBA,EAAkC,8DAHhB,cAIlBA,EAAyB,yDAJP,cAKlBA,EAA4B,4EALV,GAURE,EACF,GADEA,EAEG,EAGHC,EACK,iBADLA,EAEF,UAFEA,EAGE,cAHFA,EAIO,mBAJPA,EAKK,iBALLA,EAOI,gBAGJC,GAAgB,mBAC1BD,EAA8B,cADJ,cAE1BA,EAAyB,cAFC,cAG1BA,EAA4B,cAHF,GAUhBE,EAAU,CACrB,eAAgB,eAChB,WAAY,YAKDC,EAEF,oCAGEC,EAA8B,CACzCC,uBAAwB,GACxBC,WAAW,G,6CC3EAC,EAAY,uCAAG,WAAOC,EAAMC,EAAMC,EAAeC,GAAlC,SAAAC,EAAA,6DAC1BF,EAAc,CAAEG,WAAW,IADD,kBAEnBC,QAAQC,UACdC,MAAK,WACJ,OAAOC,MAAMT,EAAM,CACjBU,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAC3B,cAAgB,UAAhB,OAA2BR,IAC3BF,KAAMW,KAAKC,UAAUZ,QAGxBO,MAAK,SAACM,GACL,OAAOA,EAASC,UAEjBP,MAAK,SAACQ,GAEL,GADAd,EAAc,CAAEG,WAAW,IACvBW,EAAKC,MACP,MAAMD,EAER,OAAOA,KAERE,OAAM,SAAAF,GAEL,MADAd,EAAc,CAAEiB,SAAU,CAACC,KAAMJ,EAAKK,UAAWC,QAASN,EAAKC,OAASZ,WAAW,IAC7EW,MAvBkB,2CAAH,4DA2BZO,EAAW,uCAAG,WAAOvB,EAAME,EAAeC,GAA5B,SAAAC,EAAA,6DACzBF,EAAc,CAAEG,WAAW,IADF,kBAElBC,QAAQC,UACdC,MAAK,WACJ,OAAOC,MAAMT,EAAM,CACjBU,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAC3B,cAAgB,UAAhB,OAA2BR,SAG9BK,MAAK,SAACM,GACL,OAAOA,EAASC,UAEjBP,MAAK,SAACQ,GAEL,GADAd,EAAc,CAAEG,WAAW,IACvBW,EAAKC,MACP,MAAMD,EAER,OAAOA,KAERE,OAAM,SAAAF,GAEL,MADAd,EAAc,CAAEiB,SAAU,CAACC,KAAMJ,EAAKK,UAAWC,QAASN,EAAKC,OAASZ,WAAW,IAC7EW,MAtBiB,2CAAH,0D,QCvBXQ,EAAe,SAACC,GAC3B,IAAMC,EAAYC,UAAUF,GAC5B,OAAOE,OAAOA,QAAQD,EAAW,aAAa,SAACE,GAC7C,OAAOD,OAAOC,GAAQ,MAKbC,GAAkB,SAACC,EAAaC,GAC3C,IAAMC,EAAoBL,OAAOG,GAC3BG,EAAqBN,OAAOI,GAClC,GAAIE,EAdmB,IAcuBD,EAdvB,GAerB,OAfqB,GAkBvB,IAAME,EAAQ,GAoBd,OAnBAP,UAAUA,QAAQ,EAAGK,EAAkB,IAAI,SAACG,GAC1CD,EAAMC,GAAc,CAACA,MAEvBR,UAAUA,QAAQ,EAAGM,EAAmB,IAAI,SAACG,GAC3CF,EAAM,GAAGE,GAAeA,KAG1BT,UAAUA,QAAQ,EAAGK,EAAkB,IAAI,SAACG,GAC1CR,UAAUA,QAAQ,EAAGM,EAAmB,IAAI,SAACG,GACxCN,EAAYK,EAAa,KAAOJ,EAAaK,EAAc,GAC5DF,EAAMC,GAAYC,GAAeF,EAAMC,EAAW,GAAGC,EAAY,GAEjEF,EAAMC,GAAYC,GAAgBC,KAAKC,IAAIJ,EAAMC,EAAW,GAAGC,EAAY,GAAK,EAC9EC,KAAKC,IAAIJ,EAAMC,GAAYC,EAAY,GAAK,EAC1CF,EAAMC,EAAW,GAAGC,GAAe,UAKtCF,EAAMF,GAAmBC,IAYrBM,GAAoB,WAC/B,IAAMC,EAAQ,IAAIC,KACZC,EAAU,IAAID,KAAKD,GACzBE,EAAQC,QAAQH,EAAMI,UAAY,GAClC,IAAMC,EAAKH,EAAQE,UACbE,EAAKJ,EAAQK,WAAa,EAC1BC,EAAON,EAAQO,cAErB,MAAM,GAAN,OAAUJ,EAAV,aAAiBC,EAAG,EAAI,GAAK,KAAOA,EAApC,YAA0CE,ICtDtCE,GAAoB,SAACC,EAAOC,GAChC,IAAMC,EAAa7B,EAAa2B,EAAM1B,MAChC6B,EAAoB9B,EAAa2B,EAAMI,aAC5BC,EAAmCL,EAA5CM,QAAR,EAAoDN,EAA3BO,UACnBC,QADN,MAA6C,GAA7C,GACgCC,OAAO,GAEjCC,EAA2BlC,OAAOyB,EAAiB,CAAEU,yBAA0BX,EAAMY,gBAC3F,IAAKpC,UAAUkC,GACb,OAAOA,EAGT,IAAMG,EAAgBrC,OAAOyB,GAAiB,SAACa,GAC7C,IAAMC,EAAcxE,EAAQuE,EAAME,eAC5BC,EAAgBzC,MAAMsC,EAAO,kBAAmB,IAAIL,OAAO,GAEjE,OAAOJ,IAAWU,GAAeP,IAAmBS,KAEtD,IAAKzC,UAAUqC,GACb,OAAOA,EAGT,IAAMK,EAAiC1C,OAAOyB,GAAiB,SAACa,GAC9D,IAAQxC,EAASwC,EAATxC,KACF6C,EAAY9C,EAAaC,GAE/B,OADqBI,GAAgBwB,EAAYiB,GHKnB,KGFhC,IAAK3C,UAAU0C,GACb,OAAOA,EAGT,IAAME,EAAgC5C,OAAOyB,GAAiB,YAAe,IAAZ3B,EAAW,EAAXA,KACzD6C,EAAY9C,EAAaC,GAE/B,OAD0BI,GAAgByB,EAAmBgB,GHJ/B,KGOhC,OAAK3C,UAAU4C,GDyBkC,SAACnB,EAAiBoB,GACnE,IAAI7C,UAAUyB,GAAd,CAGA,IAAMqB,EAA4B9C,MAAMyB,GAAiB,YAAe,IAAZ3B,EAAW,EAAXA,KAC1D,OAAOE,UAAUF,MAEbiD,EAAwB/C,UAAU6C,GAClCG,EAAmBC,gBAA+BF,EAAuBD,GAC/E,EAAyCE,EAAjCE,iBAAR,MAAkB,GAAlB,EAAsBC,EAAmBH,EAAnBG,eACtB,EAAqBD,EAAbE,OACR,YADA,MAAe,EAAf,GA1E4B,GA4EnB3B,EAAgB0B,QADzB,GChCOE,CAAoC5B,EAAiBD,EAAM1B,MAHzD8C,GAMLU,GAA8B,SAAC7B,GACnC,OAAOzB,MAAMyB,GAAiB,SAAC8B,GAC7B,MAAO,CACLC,eAAgBD,EAAYpB,yBAC5BrC,KAAMyD,EAAYzD,KAClB2D,QAASF,EAAYE,QACrBC,mBAAoBH,EAAYG,mBAChCC,WAAYJ,EAAYI,WACxBC,WAAYL,EAAYK,gBAKjBC,GAAiB,uCAAG,WAAOrC,EAAOjD,GAAd,mBAAAE,EAAA,+EAEVmB,EAAYjC,EAASmG,kBAAmBvF,EAAeiD,EAAMhD,OAFnD,UAEvBa,EAFuB,OAGvBoC,EAAkBzB,MAAMX,EAAM,gBAAiB,IAC/C0E,EAAqBxC,GAAkBC,EAAOC,IAChDzB,UAAU+D,GALe,uBAM3BxF,EAAc,CACZyF,MAAOtG,EACPuG,0BAA2BX,GAA4B7B,KAR9B,6BAaxBzB,UAAU+D,EAAmBJ,aAAgB3D,UAAU+D,EAAmBH,YAblD,wBAc3BrF,EAAc,CAACyF,MAAOtG,EAA0BqG,uBAdrB,8BAiBxB/D,UAAU+D,EAAmBG,cAjBL,wBAkB3B3F,EAAc,CAACyF,MAAOtG,EAAgCqG,uBAlB3B,2BAqB7BxF,EAAc,CAACyF,MAAOtG,EAA2BqG,uBArBpB,4GAAH,wDCzDxBI,GAAoB,SAACC,GACzB,IAAMC,EAAWD,EAAiBE,KAGlC,OFkCkC,WAClC,IAAMzD,EAAQ,IAAIC,KACZI,EAAKL,EAAMI,UACXE,EAAKN,EAAMO,WAAa,EACxBC,EAAOR,EAAMS,cAEnB,MAAM,GAAN,QAAWJ,EAAG,EAAI,GAAK,KAAOA,EAA9B,aAAqCC,EAAG,EAAI,GAAK,KAAOA,EAAxD,YAA8DE,GE1CpCkD,KAEAF,EACjBD,EAAiBI,MAAM,GAEzBxE,OAAOoE,EAAiBI,QAG3BC,GAA0B,SAACjD,EAAOkD,GACtC,IAAMC,EAAuB3E,MAAMwB,EAAO,0BACpCoD,EAAiB,GAuBvB,OAtBA5E,UAAU0E,GAAY,SAACG,GACrB,IAAQC,EAAaD,EAAbC,SACFC,EAAoB/E,SAAS8E,GAAU,SAACE,GAE5C,IAAMC,EAAqBjF,MAAMgF,EAAS,qBAAsB,GAC1DE,EAAoBlF,MAAMgF,EAAS,2BAA4B,GACrE,OAAOC,EAAqB,GAAKC,GAAqBtH,GACpDoH,EAAQG,gBAAkBvH,GAAuBoH,EAAQI,aAAeT,KAEtEU,EAAyBrF,QAAQ+E,EAAmB,4BAE1D,GAAIM,EAAwB,CAC1B,IAAMC,EAAanB,GAAkBkB,GACrCT,EAAeW,KAAf,uCACKV,GACAQ,GAFL,IAGEG,UAAWF,SAIItF,QAAQ4E,EAAgB,6BAKlCa,GAAU,uCAAG,WAAMjE,EAAOjD,GAAb,uBAAAE,EAAA,yDAChBiH,EAAalE,EAAbkE,SADgB,uBAGtBnH,EAAc,CAAEyF,MAAOtG,IAHD,iCAMlBiI,EAAa/E,KANK,kBAQHhB,EAAY,GAAD,OAAIjC,EAASiI,YAAb,wBAAwCF,EAAxC,iBAAyDC,GACtFpH,EAAeiD,EAAMhD,OATA,UAQhBa,EARgB,OAUhBqF,EAAa1E,MAAMX,EAAM,UAAW,IACpCwG,EAAcpB,GAAwBjD,EAAOkD,IAC/C1E,UAAU6F,GAZQ,wBAapBtH,EAAc,CAACiB,SAAU,CAAEC,KAAM5B,EAAoB8B,QAAQ,wCAAD,OAA0C+F,MAblF,2BAgBtBnH,EAAc,CAAEyF,MAAOtG,EAAwBmI,gBAhBzB,4GAAH,wD,SCpChB,SAASC,GAAoBC,GAElC,OADkBC,aAAaD,GCJ1B,ICJHE,GAAOC,GAAQC,GDINC,GAAkB,SAAC5E,GAA+B,IAAxB6E,EAAuB,uDAAT,IAC7CC,EAAiBC,GAAkB/E,GACnCgF,EAAWC,GAAYjF,EAAMwC,OAC7B0C,EAAW,2BACZJ,GADY,IAEfK,SAAUnF,EAAMmF,SAChBC,MAAOpF,EAAMoF,OAASpF,EAAMqF,gBAC5BC,eAAgBtF,EAAMqF,gBACtBE,UAAWP,IAEPQ,EAAclB,GAAoBY,GACxCO,OAAOC,YAAW,WAChBD,OAAOE,SAASC,KAAhB,UAA0B5F,EAAM6F,SAAhC,YAA4CL,KAC3CX,IAGCE,GAAoB,SAAC/E,GACzB,MAAkCA,EAA1BuC,0BAAR,MAA2B,GAA3B,EACMvE,EAAW8H,GAAe9F,GAC1B+F,EAAWC,GAAkBhG,GAC7BiG,EAAY,CAChBjE,eAAgBO,EAAmB5B,yBACnCrC,KAAMiE,EAAmBjE,KACzB2D,QAASM,EAAmBN,QAC5BC,mBAAoBK,EAAmBL,mBACvCgE,YAAa3D,EAAmBJ,WAChCgE,YAAa5D,EAAmBH,WAChCgE,SAAUpI,EAASC,KACnBoI,YAAarI,EAASG,QACtBmI,UAAW7I,KAAKC,UAAUqI,IAG5B,OAAO/F,EAAMwC,OACX,KAAKtG,EACH,MAA4BqG,EAApBG,oBAAR,MAAqB,GAArB,EACM6D,EAAkB/H,OAAOkE,IAAiB,GAChD,OAAO,2BACFuD,GADL,IAEEO,UAAWD,EAAgBC,UAC3BC,YAAaF,EAAgBjI,KAC7BoI,KAAMH,EAAgBG,KACtB9C,WAAY2C,EAAgB3C,WAC5Bd,KAAMyD,EAAgBzD,KACtB6D,KAAMJ,EAAgBI,KACtBC,eAAgBL,EAAgBK,iBAEpC,KAAK1K,EACH,MAA0C8D,EAAlCqE,mBAAR,MAAoB,GAApB,EAAwBwC,EAAkB7G,EAAlB6G,cAClBC,EAAaC,GAAc1C,GACjC,OAAO,2BACF4B,GADL,IAEEW,eAAgBC,EAChBL,UAAWnC,EAAYmC,UACvBC,YAAapC,EAAY/F,KACzB0I,eAAgB3C,EAAY4C,QAC5BC,qBAAsB7C,EAAY8C,cAClCC,eAAgB/C,EAAYgD,QAC5BX,KAAMrC,EAAYL,UAClBJ,WAAYS,EAAYT,WACxBd,KAAMuB,EAAYvB,KAClBwE,YAAaR,EACb7E,QAASoC,EAAYpC,QAErB0E,KAAM,IAEV,QACE,OAAOV,IAIPH,GAAiB,SAAC9F,GACtB,OAAIA,EAAMwC,QAAUtG,EACX,GAGL8D,EAAMwC,QAAUtG,EACVsC,UAAUwB,EAAMhC,UAA6B,CACnDC,KAAM5B,EACN8B,QAASK,OAAOA,MAAMwB,EAAMyC,0BAA2B,QAAS,MAF9BzC,EAAMhC,SAKrCgC,EAAMhC,UAAY,IAGrBiH,GAAc,SAACzC,GACnB,OAAIA,IAAUtG,EACLA,EAGFsG,GAGHuE,GAAgB,WAAuB,IAAtB1C,EAAqB,uDAAP,GAC7BkD,EAAkB/I,MAAM6F,EAAa,eAAgB,IACrDmD,EAAsBhJ,OAAO+I,GAAiB,WAAiB,IAAhBzG,EAAe,uDAAP,GAC3D,OAAOA,EAAMmB,UAAYoC,EAAYpC,WAEvC,OAAOzD,MAAMgJ,EAAqB,MAAO,MAGrCxB,GAAoB,SAAChG,GACzB,OAAIA,EAAMwC,QAAUtG,EACX,CAAEuL,wBAAyBjJ,QAAQwB,EAAMyC,0BAA2B,EN3BxC,IM6B9B,IE5GM,OAA0B,yC,UDEzC,SAASiF,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,GAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,GAAgBC,EAAMC,GAC7B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,GAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxB,GAAS,CACtD6B,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKT,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DS,GAAIR,GACHD,GAAS,KAAM3E,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3EqF,SAAU,UACVC,SAAU,UACVC,EAAG,iHACHN,KAAM,aACHhF,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEsF,EAAG,yKACHN,KAAM,aACH/E,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEqF,EAAG,kaACHN,KAAM,cAIV,IAAIO,GAA0B,aAAiBhB,I,IAChC,I,8CE1BTiB,GAAqB,SAACC,GAC1B,OAAQ,sBAAKC,UAAWD,EAAQrN,KAAxB,SACN,eAACuN,EAAA,EAAD,2CAcEC,GAA4B,SAACH,EAASI,EAA8BC,GACxE,OAAQ,+BACN,gBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,UAAU,SAA/D,UACE,eAACC,GAAA,EAAD,CAAQV,UAAWD,EAAQY,OACzBC,QAAQ,YACRC,MAAM,UACNC,WAAW,EACXC,QAASZ,EAJX,SAKI,eAACF,EAAA,EAAD,CAAYW,QAAQ,YAApB,+CAIJ,eAACF,GAAA,EAAD,CAAQV,UAAWD,EAAQiB,aACzBJ,QAAQ,WACRC,MAAM,UACNC,WAAW,EACXC,QAASX,EAJX,SAKI,eAACH,EAAA,EAAD,CAAYW,QAAQ,YAApB,gCAQGK,GAAiB,SAACC,GAC7B,IAAQtL,EAA8FsL,EAA9FtL,MAAOuL,EAAuFD,EAAvFC,UAAWpB,EAA4EmB,EAA5EnB,QAASqB,EAAmEF,EAAnEE,UAAWC,EAAwDH,EAAxDG,UAAWC,EAA6CJ,EAA7CI,WAAYnB,EAAiCe,EAAjCf,6BAC/DoB,EAAgBJ,EAAY,EAC5BK,EPMC,IAAItM,KAAe,IONciM,GPMRM,cAAcC,OAAO,GAAI,GOLzD,OACE,gBAACrB,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACE,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,uBAKJ,gBAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,UACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACA,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,yBAIA,eAAC7B,EAAA,EAAD,CAAYW,QAAQ,YAApB,SACE,gBAACiB,GAAA,EAAD,CAAKE,GAAI,EAAT,UACE,gBAACF,GAAA,EAAD,0BACejM,EAAMqF,mBAErB,eAAC+G,GAAA,EAAD,CAAMjB,QAASZ,EAAf,6DAMN,eAACE,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAACK,GAAA,EAAD,CAAWC,UAAW,EAAGC,KAAK,SAAS1C,GAAG,MAAM2C,MAAM,cAAcxB,QAAQ,WAAWyB,MAAOzM,EAAM0M,IAAKC,SAAU,SAAAC,GAAC,OAAIpB,EAAUoB,EAAE/E,OAAO4E,YAE7I,gBAAChC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAxB,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,EAAf,SACA,eAAClB,GAAA,EAAD,CAAQV,UAAWD,EAAQY,OAAQlB,GAAG,MAAMmB,QAAQ,YAAYC,MAAM,UAAUE,QAASM,EACvFoB,SAAU7M,EAAM9C,UADlB,0BAKA,eAACuN,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,EAAf,SACA,eAAClB,GAAA,EAAD,CAAQV,UAAWD,EAAQY,OAAQlB,GAAG,MAAMmB,QAAQ,YAClDC,MAAOU,EAAa,UAAU,UAC9BR,QAASO,EACTmB,UAAWlB,GAAgB3L,EAAM9C,UAHnC,yBAIYyO,EAAa,GAAG,IAAIC,EAAgB,gBAsFlDkB,GAA0B,SAACC,EAAgB5C,GAC/C,OAAI4C,ET/H6B,EStCX,SAAC5C,GACvB,OAAQ,sBAAKC,UAAWD,EAAQrN,KAAxB,SACN,eAACuN,EAAA,EAAD,mDAoKO2C,CAAgB7C,GAElBD,GAAmBC,IA8Cf8C,GAAmB,SAACjN,EAAOmK,GACtC,IAAM+C,EAlBgB,SAAClN,GACvB,IAAMmN,EAAU3O,MAAMwB,EAAMhC,SAAU,QACtC,OAAImP,IAAY9Q,GAA6B8Q,IAAY7Q,EAAiB8Q,eAChE,eAAC/C,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACR,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,+GAMM,eAAC7B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACN,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBjB,MAAM,iBAAvC,oCAOmBoC,CAAgBrN,GACrC,OACE,gBAACyK,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACGkB,IAEH,eAACzC,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACG9B,GAAmBC,SChOtBmD,GAAQC,EAAQ,IAEhBC,GAAYC,YAAW,CAC3BC,KAAM,CACJC,gBAAiB,UACjBpE,MAAO,QAETqE,MAAO,CACLC,UAAW,SACXtE,MAAO,QAETuE,KAAM,CACJC,SAAU,EACVxE,MAAO,MACPyE,UAAW,MACXC,OAAQ,OACRC,QAAS,KACTC,SAAU,WACVC,OAAQ,GAEVrD,OAAQ,CACNsD,UAAW,GACXC,aAAc,IAEhBlD,aAAc,CACZiD,UAAW,IAEbvR,KAAM,CACJuR,UAAW,QAIf,SAASE,KACP,IAAMC,EAAQC,SAAwB,GAAdvP,KAAKwP,UAAc,EAC3C,OAAOzS,EAAYuS,GA6QNG,oBA1Qf,SAAarF,GACX,ILxDqC9D,EKwD/BoJ,GLxD+BpJ,EKwDO8D,EAAM3D,SAASkJ,OLvDtCrK,SAASgB,EAAa,CAAEsJ,mBAAmB,KACzC,IKuDjBC,EAAevQ,UAAUoQ,EAAaxJ,OAASlJ,EAAqCA,EAC1F,EAA0B8S,mBAAS,2BAAIJ,GAAL,IAChCpM,MAAOuM,EAAcrC,IAAK,GAAIrH,gBAAiB7G,MAAMoQ,EAAc,SACnEK,UAAWzQ,MAAMoQ,EAAc,SAAUnM,0BAA2B,MAFtE,mBAAOzC,EAAP,KAAckP,EAAd,KAGA,EAAkCF,mBVLN,KUK5B,mBAAOzD,EAAP,KAAkB4D,EAAlB,KACA,EAA4CH,mBAAS,GAArD,mBAAOjC,EAAP,KAAuBqC,EAAvB,KACA,EAAkDJ,mBAASvS,GAA3D,mBAAO4S,EAAP,KAA0BC,GAA1B,KAEMvS,GAAgB,SAACwS,GACrBL,EAAS,2BAAIlP,GAAUuP,KAEnB/D,GAAY,SAACkB,GACjBwC,EAAS,2BAAIlP,GAAL,IAAY0M,UAGhBhB,GAAU,uCAAG,8BAAAzO,EAAA,6DACXuS,EAAYjB,KAClBY,EVlB0B,KUgBT,kBAIIvS,EAAaT,EAASsT,KAAM,CAC7C,OAAUzP,EAAMqF,gBAChB,OAAUmK,GACTzS,IAPY,OAITc,EAJS,OAQfqR,EAAS,2BAAIlP,GAAL,IAAY0P,MAAO7R,EAAK6R,MAAOlN,MAAOtG,KAR/B,yGAAH,qDAaVuP,GAAS,uCAAG,8BAAAxO,EAAA,6DACV0S,EAAUrC,GAAM,UAAUsC,OAAO5P,EAAM0M,KAAKmD,OAAO,OADzC,kBAGKjT,EAAaT,EAAS2T,aAAc,CACrD,IAAOH,EACP,MAAS3P,EAAM0P,OACd3S,IANW,OAGRc,EAHQ,OAOdqR,EAAS,2BAAIlP,GAAL,IAAYhD,MAAOa,EAAKb,MAAOgB,SAAU,GAAIwE,MAAOtG,KAP9C,yGAAH,qDAYT6T,GAAY,uCAAG,8BAAA9S,EAAA,+EAEEL,EAAaT,EAAS6T,SAAU,CACjD,cAAiB,CAAChQ,EAAMuC,mBAAmB5B,0BAC3C,UAAaX,EAAMqE,YAAYmC,UAC/B,KAAQxG,EAAMqE,YAAYL,UAC1B,WAAchE,EAAMqE,YAAYT,WAChC,KAAQpF,UAAUwB,EAAMuC,mBAAmBJ,YAAY,EAAE,GACxDpF,GAAeiD,EAAMhD,OARP,OAEXa,EAFW,OASXgJ,EAAgBrI,MAAMX,EAAM,+BAC7BW,UAAUqI,GAGbqI,EAAS,2BAAIlP,GAAL,IAAYhC,SAAS,CAAEC,KAAM5B,EAA2B8B,QAAS,gCAFzE+Q,EAAS,2BAAIlP,GAAL,IAAYhC,SAAS,GAAIwE,MAAOtG,EAA2B2K,mBAXpD,yGAAH,qDAmBZoJ,GAAwB,SAAC5K,GAC7B6J,EAAS,2BAAKlP,GAAN,IAAaqF,sBAGjB6K,GAAyB,WAC7B,IAAMC,EAAcnQ,EAAMqF,gBACE,KAAxB7G,OAAO2R,GAQXjB,EAAS,2BAAKlP,GAAN,IAAawC,MAAOtG,EAAoB+S,UAAWjP,EAAMqF,mBAP/D6J,EAAS,2BAAKlP,GAAN,IAAahC,SAAU,CAC7BC,KAAM5B,EACN8B,QAAS3B,OAQT+N,GAA+B,WACnC2E,EAAS,2BAAKlP,GAAN,IACNwC,MAAOtG,EACPwQ,IAAK,GACL1O,SAAU,KACVqH,gBAAiB,OAIf+K,GAAyB,WAC7BlB,EAAS,2BAAKlP,GAAN,IACNwC,MAAOtG,MAILsO,GAAW,WACf5F,GAAgB5E,EAAO,IA8CnBqQ,GAAuB,WAE3B,GADAnB,EAAS,2BAAIlP,GAAL,IAAYhC,SAAU,GAAIwE,MAAOtG,KACrC6Q,EV3I2B,EU2IW,CACxC,IAAMuD,EAAa5K,YAAW,WAC5B0J,EAAkBrC,EAAe,KAChC,KACH,OAAO,kBAAMwD,cAAcD,IAE3B1L,GAAgB,2BAAI5E,GAAL,IAAYwC,MAAOtG,MAGtCsU,qBAAU,WACR,OAAOxQ,EAAMwC,OACX,KAAKtG,EACC8D,EAAMqF,iBACRqG,KAEF,MACF,KAAKxP,EACHmG,GAAkBrC,EAAOjD,IACzB,MACF,KAAKb,EACH+H,GAAWjE,EAAOjD,IAClB,MACF,KAAKb,EACH6T,GAAa/P,EAAOjD,IACpB,MACF,KAAKb,EACL,KAAKA,EACL,KAAKA,EACH0I,GAAgB5E,GAChB,MACF,KAAK9D,EACL,KAAKA,EACL,KAAKA,EAEH,YADAoT,GAAqB,2BAAK7S,GAAN,IAAmCE,WAAW,KAMtE2S,GAAqB7S,KACpB,CAACuD,EAAMwC,QACVgO,qBAAU,WAER,GADahS,MAAMwB,EAAMhC,SAAU,QACnC,CAIA,OAAQgC,EAAMwC,OACZ,KAAKtG,EAEH,YADAgT,EAAS,2BAAKlP,GAAN,IAAawC,MAAOtG,KAKhC,OAAO8D,EAAMhC,SAASC,MACpB,KAAK5B,EAEL,KAAKC,EAAiBD,GACpB,OACF,KAAKC,EAAiBD,GAEpB,YADA6S,EAAS,2BAAIlP,GAAL,IAAYwC,MAAOtG,KAE7B,KAAKI,EAAiBD,GAEpB,YADA6S,EAAS,2BAAKlP,GAAN,IAAawC,MAAOtG,KAE9B,KAAKG,EAEH,YADAgU,KAEF,KAAKhU,EACH,OACF,QAMC,YALK2D,EAAMwC,QAAUtG,EAClBmU,KAEAnB,EAAS,2BAAIlP,GAAL,IAAYwC,MAAOtG,UAIhC,CAAC8D,EAAMhC,WACVwS,qBAAU,WACR,GAAKjF,EAAL,CACA,IAAM+E,EAAa5K,YAAW,WAC5ByJ,EAAa5D,EAAU,KACtB,KACH,OAAO,kBAAMgF,cAAcD,OAC1B,CAAC/E,IACJiF,qBAAU,WACJxQ,EAAMwC,QAAUtG,GAClBgT,EAAS,2BAAIlP,GAAL,IAAYhC,SAAU,GAAIyS,QAAQ,GAAIjO,MAAOtG,OAEtD,CAAC6Q,IACJyD,qBAAU,WACR,GAAKnB,EAAkB1S,UAAvB,CAGA,KAAI0S,EAAkB3S,wBAA0B,GAAhD,CAKA,IAAM4T,EAAa5K,YAAW,WAC5B4J,GAAqB,2BAChBD,GADe,IAElB3S,uBAAwB2S,EAAkB3S,uBAAyB,OAEpE,KACH,OAAO,kBAAM6T,cAAcD,IAVzB1L,GAAgB5E,EAAO,MAWxB,CAACqP,IAEJ,IAAMlF,GAAUqD,KACVkD,GA3IgB,SAACvG,GACnB,OAAOnK,EAAMwC,OACb,KAAKtG,EACH,ODjE0B,SAACiO,GACjC,OACE,gBAACM,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACE,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBjB,MAAM,eAAvC,6BAKJ,eAACR,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACA,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,sDAKF,eAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACG9B,GAAmBC,QC+CbwG,CAAmBxG,GAC5B,KAAKjO,EACH,OD3C6B,SAACiO,GACpC,OACE,gBAACM,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACE,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBjB,MAAM,eAAvC,4BAKJ,eAACR,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACA,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,0CAKF,eAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACG9B,GAAmBC,QCyBbyG,CAAsBzG,GAC/B,KAAKjO,EACH,ODrBkC,SAAC,GACN,IADQiO,EACT,EADSA,QAASI,EAClB,EADkBA,6BACpDC,EAAkC,EAAlCA,SAAU6E,EAAwB,EAAxBA,kBACFwB,EAAyBvG,GAA0BH,EAASI,EAA8BC,GAChG,OACA,gBAACC,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACE,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBjB,MAAM,eAAvC,6BAKJ,eAACR,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACA,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,yCAKF,eAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACGqD,EAAkB1S,WACjB,gBAAC0N,EAAA,EAAD,wCACwBgF,EAAkB3S,4BAG7CmU,KCJQC,CAA2B,CAAE3G,UAASI,gCAC3CC,YAAU6E,sBACd,KAAKnT,EACH,ODagC,SAAC8D,EAAO+M,EAAgB5C,GAC9D,IAAM4G,EAAuBjE,GAAwBC,EAAgB5C,GAErE,OACE,gBAACM,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACE,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBjB,MAAM,iBAAvC,gCAKJ,eAACR,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACA,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,sDAKF,eAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACG+E,OCjCMC,CAAyBhR,EAAO+M,EAAgB5C,GACzD,KAAKjO,EACH,OAAO+Q,GAAiBjN,EAAOmK,GACjC,KAAKjO,EACH,ODkE6B,SAAC,GACD,IADGiO,EACJ,EADIA,QAASI,EACb,EADaA,6BAC/CC,EAAkC,EAAlCA,SAAU6E,EAAwB,EAAxBA,kBACJwB,EAAyBvG,GAA0BH,EAASI,EAA8BC,GAChG,OACE,gBAACC,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,QAApB,SACE,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBjB,MAAM,eAAvC,kCAKJ,eAACR,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACA,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,+FAKF,eAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACGqD,EAAkB1S,WACjB,gBAAC0N,EAAA,EAAD,wCACwBgF,EAAkB3S,4BAG7CmU,KC3FQI,CAAsB,CAAE9G,UAAS9E,gBAAiBrF,EAAMqF,gBAC7DkF,gCAA8BC,YAAU6E,sBAC5C,KAAKnT,EACH,OD6FiC,SAACoP,GACxC,IAAQnB,EAAwFmB,EAAxFnB,QAAS9E,EAA+EiG,EAA/EjG,gBAAiBkF,EAA8De,EAA9Df,6BAA8BC,EAAgCc,EAAhCd,SAAU6E,EAAsB/D,EAAtB+D,kBACpEwB,EAAyBvG,GAA0BH,EAASI,EAA8BC,GAChG,OACE,gBAACC,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,UACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,YAApB,SACE,eAACiB,GAAA,EAAD,CAAKhB,MAAM,UAAUiB,WAAW,iBAAhC,qCAKJ,eAACzB,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACI,gBAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBC,GAAI,EAArC,mDACyC9G,EACtCgK,EAAkB1S,WACjB,gBAAC0N,EAAA,EAAD,wCACwBgF,EAAkB3S,iCAMnDmU,KCrHQK,CAA0B,CAAE/G,UAAS9E,gBAAiBrF,EAAMqF,gBACjEkF,gCAA8BC,YAAU6E,sBAC5C,KAAKnT,EACH,ODuHqC,SAACiO,EAASnK,EAAOkQ,EAAuBD,EAAuBG,GAC1G,OACE,gBAAC3F,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAASE,UAAU,SAArD,UACE,eAACJ,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACI,eAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBC,GAAI,EAArC,yDAKN,eAAC1B,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAACK,GAAA,EAAD,CACEC,UAAW,GACXpB,WAAW,EACXiG,KAAK,QACL5E,KAAK,SACL1C,GAAG,iBACH2C,MAAM,2BACNxB,QAAQ,WACRyB,MAAOzM,EAAMqF,gBACbsH,SAAU,SAAAC,GAAC,OAAIqD,EAAsBrD,EAAE/E,OAAO4E,YAGlD,eAAChC,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAClB,GAAA,EAAD,CAAQV,UAAWD,EAAQY,OACzBC,QAAQ,YACRC,MAAM,UACNC,WAAW,EACXrB,GAAG,yBACHsB,QAASiF,EALX,SAME,eAAC/F,EAAA,EAAD,CAAYW,QAAQ,YAApB,6BCrJKoG,CAA8BjH,EAASnK,EAAOkQ,EAAuBD,GAAuBG,IACrG,KAAKlU,EACH,OD4JqC,SAACiO,EAASnK,EAAOkQ,EAAuB3F,GACnF,OACE,gBAACE,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,SAASD,QAAQ,SAASE,UAAU,SAA/D,UACE,eAACJ,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAIrB,QAAQ,SAA3B,SACE,eAAC0G,GAAA,EAAD,CAASC,UAAWC,GAAcC,SAAS,cAE7C,eAAC/G,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACE,eAAC3B,EAAA,EAAD,CAAYW,QAAQ,KAApB,SACE,gBAACiB,GAAA,EAAD,CAAKC,WAAW,iBAAiBC,GAAI,EAArC,mCACyBnM,EAAMqF,gBAD/B,2BAKJ,gBAACoF,EAAA,EAAD,CAAMC,WAAS,EAACG,UAAU,MAAMF,QAAQ,gBAAgB8G,QAAS,EAAjE,UACE,eAAChH,EAAA,EAAD,CAAMsB,MAAI,EAAC2F,GAAI,EAAf,SACE,eAAC5G,GAAA,EAAD,CAAQV,UAAWD,EAAQY,OACzBC,QAAQ,WACRC,MAAM,UACNC,WAAW,EACXrB,GAAG,wBACHsB,QAAS+E,EALX,SAME,eAAC7F,EAAA,EAAD,CAAYW,QAAQ,YAApB,qBAKJ,eAACP,EAAA,EAAD,CAAMsB,MAAI,EAAC2F,GAAI,EAAf,SACE,eAAC5G,GAAA,EAAD,CAAQV,UAAWD,EAAQY,OACzBC,QAAQ,WACRC,MAAM,UACNC,WAAW,EACXrB,GAAG,yBACHsB,QAASZ,EALX,SAME,eAACF,EAAA,EAAD,CAAYW,QAAQ,YAApB,0BC7LG2G,CAA8BxH,EAASnK,EAAOkQ,GAAuB3F,IAC9E,QACE,OAAOc,GAAe,CAACrL,QAAOuL,YAAWpB,UAASqB,aAAWC,aAAWC,cAAYnB,mCAmHvEqH,CAAczH,IAC3B0H,GA3JArT,UAAUA,MAAMwB,EAAMhC,SAAU,aAAeQ,MAAMwB,EAAO,WAAa9D,EACpE,KAGP,eAACuO,EAAA,EAAD,CAAMG,WAAW,SAASD,QAAQ,SAAlC,SACE,eAACF,EAAA,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAf,SACA,eAAC3B,EAAA,EAAD,CAAYY,MAAM,QAAlB,SACE,eAACgB,GAAA,EAAD,CAAKC,WAAW,iBAAhB,SACGlM,EAAMhC,SAASG,gBAoJ1B,OACE,uBAAKiM,UAAWD,GAAQuD,KAAxB,UACE,sBAAKoE,IAAG,UAAKC,IAAS3H,UAAWD,GAAQyD,QACzC,gBAACoE,EAAA,EAAD,CAAM5H,UAAWD,GAAQ2D,KAAzB,UACG+D,GACA7R,EAAM9C,WAAa,eAAC+U,EAAA,EAAD,IACnBvB,YCjTMwB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/U,MAAK,YAAkD,IAA/CgV,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCAdO,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,KAAD,UACE,eAAC,IAAD,CAAO/V,KAAK,IAAIyU,UAAWuB,SAG/BC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1739ba05.chunk.js","sourcesContent":["\nexport const SECRET_KEYS = [\n  'U2FsdGVkX1/fkazU2I2Rdz3hI7iWT6HRzThZj16rpyn4xYM6wcbd84k4CpJimxC0YpG3kFn9qog6LhmaRoS14g==',\n  'U2FsdGVkX19I0TpTI50qTW+0o+LEWSBPYIcivZR4gvANVyLhRhP+rwapNMmyE3tE7e2EeEIV8X6YVfOODlCUbg==',\n  'U2FsdGVkX181DnPRmCbp6NePNHeHRfh3dAO9dMMSApKdvNpIEcK11CYuqjyI04DU4TRuktcSduxWej8OGCz9ZA==',\n  'U2FsdGVkX19NYwIf1jzNr2ghhC7bH1/H36TLGsiUKSopzfhdHB4aSa2RczWmSdN35ZwZXJ18cha9qX1vLO1BpQ==',\n  'U2FsdGVkX18kqQVkl8zGUA8schCVAm6NWNM0q/bCV7dHyUJoy8JPbRms4IIsFNU4Ahx6ffx0FVYsOIatS98WjA==',\n  \"U2FsdGVkX18y9RiV+sdQG+dNc09ETZfLddhx6sEu10zP07S14C9X4cdXXRtwJ+Pa+x2zycwllBLV9opSgQ9Cjg==\"\n];\n\nexport const PROCESS_STAGE = {\n  INIT: 'INIT',\n  VALIDATE_OTP: 'VALIDATE_OTP',\n  FETCH_BENEFICIARY: 'FETCH_BENEFICIARY',\n  FETCH_SLOTS: 'FETCH_SLOTS',\n  SCHEDULE: 'SCHEDULE',\n  SLOT_BOOKED: 'SLOT_BOOKED',\n  ERROR: 'ERROR',\n  EXISTING_BOOKING: 'EXISTING_BOOKING',\n  BOOKING_FAILED: 'BOOKING_FAILED',\n  VACCINATED: 'VACCINATED',\n  REGISTERED: 'REGISTERED',\n  NOT_REGISTERED: 'NOT_REGISTERED',\n  ALTERNATE_PHONE_INIT: 'ALTERNATE_PHONE_INIT',\n  CONFIRM_PHONE: 'CONFIRM_PHONE'\n};\n\nexport const API_URLS = {\n  [PROCESS_STAGE.INIT]: 'https://cdn-api.co-vin.in/api/v2/auth/generateMobileOTP',\n  [PROCESS_STAGE.VALIDATE_OTP]: 'https://cdn-api.co-vin.in/api/v2/auth/validateMobileOtp',\n  [PROCESS_STAGE.FETCH_BENEFICIARY]: 'https://cdn-api.co-vin.in/api/v2/appointment/beneficiaries',\n  [PROCESS_STAGE.SCHEDULE]: 'https://cdn-api.co-vin.in/api/v2/appointment/schedule',\n  [PROCESS_STAGE.FETCH_SLOTS]: 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict'\n};\n\nexport const ALLOWED_NAME_EDITS = 3;\n\nexport const SLOT_FILTER = {\n  MIN_AGE: 18,\n  MIN_CAPACITY: 5\n};\n\nexport const ERROR_CODE = {\n  NO_BENEFICIARY: 'NO_BENEFICIARY',\n  NO_SLOT: 'NO_SLOT',\n  INVALID_OTP: 'INVALID_OTP',\n  EXISTING_BOOKING: 'EXISTING_BOOKING',\n  BOOKING_FAILED: 'BOOKING_FAILED',\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  INVALID_PHONE: 'INVALID_PHONE'\n};\n\nexport const COWIN_ERROR_CODE = {\n  [ERROR_CODE.EXISTING_BOOKING]: 'APPOIN0022',\n  [ERROR_CODE.INVALID_OTP]: 'USRAUT0014',\n  [ERROR_CODE.NO_BENEFICIARY]: 'APPOIN0001'\n};\n\nexport const OTP_RETRY_TIME = 120;\n\nexport const MAX_BOOKING_ATTEMPT = 2;\n\nexport const ID_TYPE = {\n  'Aadhaar Card': 'aadhaar_card',\n  'PAN Card': 'pan_card'\n};\n\nexport const SLOT_CUTOFF_HOUR = 15;\n\nexport const INVALID_PHONE_REASONS_TEXT = {\n  SAME_AS_LAST: 'New phone number can\\'t be same as last',\n  DEFAULT: 'Please enter a valid phone number'\n};\n\nexport const DEFAULT_AUTO_CALLBACK_STATE = {\n  callBackDelayInSeconds: 15,\n  isTimerOn: false\n};\n\nexport const MAX_BENEFICIARY_ALLOWED = 5;","\nexport const makePostCall = async (path, body, stateCallback, token) => {\n  stateCallback({ isLoading: true });\n  return Promise.resolve()\n  .then(() => {\n    return fetch(path, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` },\n      body: JSON.stringify(body)\n    })\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((data) => {\n    stateCallback({ isLoading: false });\n    if (data.error) {\n      throw data;\n    }\n    return data;\n  })\n  .catch(data => {\n    stateCallback({ errorObj: {code: data.errorCode, message: data.error }, isLoading: false });\n    throw data;\n  });\n};\n\nexport const makeGetCall = async (path, stateCallback, token) => {\n  stateCallback({ isLoading: true });\n  return Promise.resolve()\n  .then(() => {\n    return fetch(path, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` }\n    })\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((data) => {\n    stateCallback({ isLoading: false });\n    if (data.error) {\n      throw data;\n    }\n    return data;\n  })\n  .catch(data => {\n    stateCallback({ errorObj: {code: data.errorCode, message: data.error }, isLoading: false });\n    throw data;\n  });\n};","import * as _ from 'lodash';\nimport * as stringSimilarity from 'string-similarity';\nconst MAX_STRING_CHECK = 50;\nconst MIN_STRING_SIMILARITY = 0.7;\n\nexport const getFirstName = (name) => {\n  const lowerName = _.toLower(name);\n  return _.find(_.split(lowerName, /\\s|\\.|\\,/), (word) => {\n    return _.size(word) > 2;\n  });\n};\n\n// Levenshtein distance\nexport const getEditDistance = (firstString, secondString) => {\n  const lengthFirstString = _.size(firstString);\n  const lengthSecondString = _.size(secondString);\n  if (lengthSecondString > MAX_STRING_CHECK ||  lengthFirstString > MAX_STRING_CHECK) {\n    return MAX_STRING_CHECK;\n  }\n\n  const costs = [];\n  _.forEach(_.range(0, lengthFirstString+1), (indexFirst) => {\n    costs[indexFirst] = [indexFirst];\n  });\n  _.forEach(_.range(0, lengthSecondString+1), (indexSecond) => {\n    costs[0][indexSecond] = indexSecond;\n  });\n\n  _.forEach(_.range(1, lengthFirstString+1), (indexFirst) => {\n    _.forEach(_.range(1, lengthSecondString+1), (indexSecond) => {\n     if (firstString[indexFirst - 1] === secondString[indexSecond - 1]){\n        costs[indexFirst][indexSecond] = costs[indexFirst-1][indexSecond-1];\n      } else {\n        costs[indexFirst][indexSecond] =  Math.min(costs[indexFirst-1][indexSecond-1] + 1,\n          Math.min(costs[indexFirst][indexSecond-1] + 1,\n            costs[indexFirst-1][indexSecond] + 1))\n      }\n    })\n  });\n\n  return costs[lengthFirstString][lengthSecondString];\n};\n\nexport const getCurrentDateString = () => {\n  const today = new Date();\n  const dd = today.getDate();\n  const mm = today.getMonth() + 1;\n  const yyyy = today.getFullYear();\n\n  return `${(dd>9 ? '' : '0') + dd}-${(mm>9 ? '' : '0') + mm}-${yyyy}`;\n};\n\nexport const getSlotDateString = () => {\n  const today = new Date();\n  const nextDay = new Date(today);\n  nextDay.setDate(today.getDate() + 1);\n  const dd = nextDay.getDate();\n  const mm = nextDay.getMonth() + 1;\n  const yyyy = nextDay.getFullYear();\n\n  return `${dd}-${(mm>9 ? '' : '0') + mm}-${yyyy}`;\n};\n\nexport const getMinuteString = (seconds) => {\n  return new Date(seconds * 1000).toISOString().substr(14, 5);\n};\n\nexport const getStringSimilarityBasedBeneficiary = (beneficiaryList, verifiedName) => {\n  if (_.isEmpty(beneficiaryList)) {\n    return undefined;\n  }\n  const beneficiaryNamesLowerCase = _.map(beneficiaryList, ({ name }) => {\n    return _.toLower(name);\n  });\n  const verifiedNameLowerCase = _.toLower(verifiedName);\n  const bestMatchResults = stringSimilarity.findBestMatch(verifiedNameLowerCase, beneficiaryNamesLowerCase);\n  const { bestMatch={}, bestMatchIndex } = bestMatchResults;\n  const { rating=0 } = bestMatch;\n  if (rating > MIN_STRING_SIMILARITY) {\n    return beneficiaryList[bestMatchIndex];\n  }\n  return undefined;\n}","import * as _ from 'lodash';\nimport { makeGetCall, makePostCall } from '../utils/network';\nimport { getEditDistance, getFirstName, getCurrentDateString,\n  getStringSimilarityBasedBeneficiary } from '../utils/stringUtils';\nimport { PROCESS_STAGE, API_URLS, ALLOWED_NAME_EDITS, ERROR_CODE, ID_TYPE } from '../constants';\n\nconst filterBeneficiary = (state, beneficiaryList) => {\n  const paramsName = getFirstName(state.name);\n  const paramsDisplayName = getFirstName(state.displayName);\n  const { id_type: idType, id_number: idNumber='' } = state;\n  const maskedIdNumber = idNumber.slice(-4);\n\n  const matchedBeneficiaryRecord = _.find(beneficiaryList, { beneficiary_reference_id: state.beneficiaryId });\n  if (!_.isEmpty(matchedBeneficiaryRecord)) {\n    return matchedBeneficiaryRecord;\n  }\n\n  const idMatchRecord = _.find(beneficiaryList, (entry) => {\n    const entryIdType = ID_TYPE[entry.photo_id_type];\n    const entryIdNumber = _.get(entry, 'photo_id_number', '').slice(-4);\n\n    return idType === entryIdType && maskedIdNumber === entryIdNumber;\n  });\n  if (!_.isEmpty(idMatchRecord)) {\n    return idMatchRecord;\n  }\n\n  const verifiedNameMatchedBeneficiary = _.find(beneficiaryList, (entry) => {\n    const { name } = entry;\n    const firstName = getFirstName(name);\n    const editDistance = getEditDistance(paramsName, firstName);\n    return editDistance < ALLOWED_NAME_EDITS;\n  });\n  if (!_.isEmpty(verifiedNameMatchedBeneficiary)) {\n    return verifiedNameMatchedBeneficiary;\n  }\n\n  const profileNameMatchedBeneficiary = _.find(beneficiaryList, ({ name }) => {\n    const firstName = getFirstName(name);\n    const editDistanceScore = getEditDistance(paramsDisplayName, firstName);\n    return editDistanceScore < ALLOWED_NAME_EDITS;\n  });\n  if (!_.isEmpty(profileNameMatchedBeneficiary)) {\n    return profileNameMatchedBeneficiary;\n  }\n\n  return getStringSimilarityBasedBeneficiary(beneficiaryList, state.name);\n};\n\nconst getBeneficiaryDetailsEntity = (beneficiaryList) => {\n  return _.map(beneficiaryList, (beneficiary) => {\n    return {\n      beneficiary_id: beneficiary.beneficiary_reference_id,\n      name: beneficiary.name,\n      vaccine: beneficiary.vaccine,\n      vaccination_status: beneficiary.vaccination_status,\n      dose1_date: beneficiary.dose1_date,\n      dose2_date: beneficiary.dose2_date,\n      };\n  });\n};\n\nexport const fetchBenficiaries = async (state, stateCallback) => {\n  try {\n    const data = await makeGetCall(API_URLS.FETCH_BENEFICIARY, stateCallback, state.token);\n    const beneficiaryList = _.get(data, 'beneficiaries', []);\n    const beneficiaryDetails = filterBeneficiary(state, beneficiaryList);\n    if (_.isEmpty(beneficiaryDetails)) {\n      stateCallback({\n        stage: PROCESS_STAGE.NOT_REGISTERED,\n        registeredBeneficiaryList: getBeneficiaryDetailsEntity(beneficiaryList)\n      });\n      return;\n    }\n    // TODO: Need to be changed later for dose 2 \n    if (!_.isEmpty(beneficiaryDetails.dose1_date) || !_.isEmpty(beneficiaryDetails.dose2_date)) {\n      stateCallback({stage: PROCESS_STAGE.VACCINATED, beneficiaryDetails });\n      return;\n    }\n    if (!_.isEmpty(beneficiaryDetails.appointments)) {\n      stateCallback({stage: PROCESS_STAGE.EXISTING_BOOKING, beneficiaryDetails });\n      return;\n    }\n    stateCallback({stage: PROCESS_STAGE.FETCH_SLOTS, beneficiaryDetails });\n  } catch(err) {\n\n  }\n};","import * as _ from 'lodash';\nimport { makeGetCall, makePostCall } from '../utils/network';\nimport { getCurrentDateString, getSlotDateString } from '../utils/stringUtils';\nimport { PROCESS_STAGE, API_URLS, SLOT_FILTER, ERROR_CODE } from '../constants';\n\nconst getTargetSlotTime = (availableSession) => {\n  const slotDate = availableSession.date;\n  const currentDateString = getCurrentDateString();\n\n  if (currentDateString !== slotDate) {\n    return availableSession.slots[0];\n  }\n  return _.last(availableSession.slots);\n};\n\nconst getAvailableVaccineSlot = (state, centerList) => {\n  const lastAttemptedSession = _.get(state, 'vaccineSlot.session_id');\n  const availableSlots = [];\n  _.forEach(centerList, (center) => {\n    const { sessions } = center;\n    const availableSessions = _.filter(sessions, (session) => {\n      // TODO: Update to param based dose check later\n      const centerAvailability = _.get(session, 'available_capacity', 0);\n      const dose1Availability = _.get(session, 'available_capacity_dose1', 0);\n      return centerAvailability > 0 && dose1Availability >= SLOT_FILTER.MIN_CAPACITY &&\n        session.min_age_limit === SLOT_FILTER.MIN_AGE && session.session_id !== lastAttemptedSession;\n    });\n    const maxAvailabilitySession = _.maxBy(availableSessions, 'available_capacity_dose1');\n\n    if (maxAvailabilitySession) {\n      const targetSlot = getTargetSlotTime(maxAvailabilitySession);\n      availableSlots.push({\n        ...center,\n        ...maxAvailabilitySession,\n        slot_time: targetSlot\n      });\n    }\n  });\n  const selectedSlot = _.maxBy(availableSlots, 'available_capacity_dose1');\n\n  return selectedSlot;\n};\n\nexport const fetchSlots = async(state, stateCallback) => {\n  const { district } = state;\n  if (!district) {\n    stateCallback({ stage: PROCESS_STAGE.REGISTERED });\n    return;\n  }\n  const dateString = getSlotDateString();\n  try {\n    const data = await makeGetCall(`${API_URLS.FETCH_SLOTS}?district_id=${district}&date=${dateString}`,\n     stateCallback, state.token);\n    const centerList = _.get(data, 'centers', []);\n    const vaccineSlot = getAvailableVaccineSlot(state, centerList);\n    if (_.isEmpty(vaccineSlot)) {\n      stateCallback({errorObj: { code: ERROR_CODE.NO_SLOT, message: `No available slot found for district ${district}`} })\n      return;\n    }\n    stateCallback({ stage: PROCESS_STAGE.SCHEDULE, vaccineSlot })\n  } catch(err) {\n\n  }\n};","import * as qs from 'qs';\n\nexport function getSearchParamsFromUrl(queryString) {\n  const searchParams = qs.parse(queryString, { ignoreQueryPrefix: true });\n  return searchParams || {};\n}\n\nexport function getUrlParamsFromObj(obj) {\n  const urlParams = qs.stringify(obj);\n  return urlParams;\n}","import { getUrlParamsFromObj } from '../utils/queryParams';\nimport { ERROR_CODE, PROCESS_STAGE, MAX_BENEFICIARY_ALLOWED } from '../constants';\nimport * as _ from 'lodash';\n\nexport const triggerCallback = (state, callbackDelay=3000) => {\n  const callbackParams = getCallbackParams(state);\n  const appState = getAppState(state.stage);\n  const requestBody = {\n    ...callbackParams,\n    auth_key: state.auth_key,\n    phone: state.phone || state.registeredPhone,\n    alternatePhone: state.registeredPhone,\n    app_state: appState\n  }\n  const queryString = getUrlParamsFromObj(requestBody);\n  window.setTimeout(function() {\n    window.location.href = `${state.callback}?${queryString}`;\n  }, callbackDelay);\n};\n\nconst getCallbackParams = (state) => {\n  const { beneficiaryDetails={} } = state;\n  const errorObj = getErrorParams(state);\n  const metaData = getMetaDataParams(state);\n  const baseState = {\n    beneficiary_id: beneficiaryDetails.beneficiary_reference_id,\n    name: beneficiaryDetails.name,\n    vaccine: beneficiaryDetails.vaccine,\n    vaccination_status: beneficiaryDetails.vaccination_status,\n    dose_1_date: beneficiaryDetails.dose1_date,\n    dose_2_date: beneficiaryDetails.dose2_date,\n    err_code: errorObj.code,\n    err_message: errorObj.message,\n    meta_data: JSON.stringify(metaData)\n  };\n\n  switch(state.stage) {\n    case PROCESS_STAGE.EXISTING_BOOKING:\n      const { appointments=[] } = beneficiaryDetails;\n      const lastAppointment = _.last(appointments) || {};\n      return {\n        ...baseState,\n        center_id: lastAppointment.center_id,\n        center_name: lastAppointment.name,\n        slot: lastAppointment.slot,\n        session_id: lastAppointment.session_id,\n        date: lastAppointment.date,\n        dose: lastAppointment.dose,\n        appointment_id: lastAppointment.appointment_id\n      };\n    case PROCESS_STAGE.SLOT_BOOKED:\n      const { vaccineSlot={}, appointmentId } = state;\n      const vaccineFee = getVaccineFee(vaccineSlot);\n      return {\n        ...baseState,\n        appointment_id: appointmentId,\n        center_id: vaccineSlot.center_id,\n        center_name: vaccineSlot.name,\n        center_address: vaccineSlot.address,\n        center_district_name: vaccineSlot.district_name,\n        center_pincode: vaccineSlot.pincode,\n        slot: vaccineSlot.slot_time,\n        session_id: vaccineSlot.session_id,\n        date: vaccineSlot.date,\n        vaccine_fee: vaccineFee,\n        vaccine: vaccineSlot.vaccine,\n        // TODO dose 2 handling\n        dose: 1\n      };\n    default:\n      return baseState;\n  }\n};\n\nconst getErrorParams = (state) => {\n  if (state.stage === PROCESS_STAGE.SLOT_BOOKED) {\n    return {};\n  }\n\n  if (state.stage === PROCESS_STAGE.NOT_REGISTERED) {\n    return !_.isEmpty(state.errorObj) ? state.errorObj : {\n      code: ERROR_CODE.NO_BENEFICIARY,\n      message: _.join(_.map(state.registeredBeneficiaryList, 'name'), ',')\n    };\n  }\n  return state.errorObj || {};\n};\n\nconst getAppState = (stage) => {\n  if (stage === PROCESS_STAGE.NOT_REGISTERED) {\n    return PROCESS_STAGE.ERROR;\n  }\n\n  return stage\n};\n\nconst getVaccineFee = (vaccineSlot = {}) => {\n  const vaccineFeeRates = _.get(vaccineSlot, 'vaccine_fees', []);\n  const selectedVaccineRate = _.find(vaccineFeeRates, (entry = {}) => {\n    return entry.vaccine === vaccineSlot.vaccine;\n  });\n  return _.get(selectedVaccineRate, 'fee', '0');\n};\n\nconst getMetaDataParams = (state) => {\n  if (state.stage === PROCESS_STAGE.NOT_REGISTERED) {\n    return { available_beneficiaries: _.slice(state.registeredBeneficiaryList, 0, MAX_BENEFICIARY_ALLOWED) };\n  }\n  return {};\n}","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgQuestionMark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 42,\n    height: 42,\n    viewBox: \"0 0 42 42\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M21 4C11.6177 4 4 11.6177 4 21C4 30.384 11.6177 38 21 38C30.3823 38 38 30.384 38 21C38 11.6177 30.3823 4 21 4Z\",\n    fill: \"#EFFAFC\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.75 29.3333C22.75 28.4133 21.966 27.6667 21 27.6667C20.034 27.6667 19.25 28.4133 19.25 29.3333C19.25 30.2533 20.034 31 21 31C21.966 31 22.75 30.2533 22.75 29.3333Z\",\n    fill: \"#0992AE\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 21C20.034 21 19.25 21.7467 19.25 22.6667V24.3333C19.25 25.2533 20.034 26 21 26C21.966 26 22.75 25.2533 22.75 24.3333V24.1233C25.767 23.3833 28 20.7717 28 17.6667C28 13.9883 24.864 11 21 11C17.136 11 14 13.9883 14 17.6667C14 18.5867 14.784 19.3333 15.75 19.3333C16.716 19.3333 17.5 18.5867 17.5 17.6667C17.5 15.8283 19.068 14.3333 21 14.3333C22.932 14.3333 24.5 15.8283 24.5 17.6667C24.5 19.5067 22.932 21 21 21Z\",\n    fill: \"#0992AE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuestionMark);\nexport default __webpack_public_path__ + \"static/media/questionMark.ca6214fd.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/build4bharat.06144520.jpg\";","import React from 'react';\nimport * as _ from 'lodash';\nimport { OTP_RETRY_TIME, MAX_BOOKING_ATTEMPT, ERROR_CODE, COWIN_ERROR_CODE, PROCESS_STAGE } from '../constants';\nimport {ReactComponent as QuestionIcon} from \"../assests/questionMark.svg\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getMinuteString } from '../utils/stringUtils';\nimport Box from '@material-ui/core/Box';\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nconst getRedirectElement = (classes) => {\n  return (<div className={classes.body}>\n    <Typography>\n    ⌛ Taking you back...\n    </Typography>\n  </div>)\n};\n\nconst getRetryElement = (classes) => {\n  return (<div className={classes.body}>\n    <Typography>\n    ⌛ Retrying some other slot...\n    </Typography>\n  </div>)\n};\n\nconst getAlternateNumberElement = (classes, enterAlternatePhoneInitStage, goToHome) => {\n  return (<div>\n    <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n      <Button className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth={true}\n        onClick={enterAlternatePhoneInitStage}>\n          <Typography variant=\"subtitle2\">\n            Vaccinated on different number?\n          </Typography>\n      </Button>\n      <Button className={classes.goHomeButton}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth={true}\n        onClick={goToHome}>\n          <Typography variant=\"subtitle2\">\n            Go to home\n          </Typography>\n      </Button>\n    </Grid>\n  </div>);\n};\n\nexport const renderOtpStage = (params) => {\n  const { state, retryTime, classes, changeOtp, submitOtp, triggerOtp, enterAlternatePhoneInitStage } = params;\n  const retryEnabled = (retryTime < 1);\n  const retryTimeString = getMinuteString(retryTime);\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"body2\">\n          <Box fontWeight=\"fontWeightBold\">\n            LOGIN\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n        <Box fontWeight=\"fontWeightBold\">\n          Enter OTP\n        </Box>\n        </Typography>\n        <Typography variant='subtitle2'>\n          <Box my={2}>\n            <Box>\n              OTP sent to {state.registeredPhone}\n            </Box>\n            <Link onClick={enterAlternatePhoneInitStage}>\n              Vaccine registered on different number?\n            </Link>\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <TextField maxLength={6} type=\"number\" id=\"otp\" label=\"6-digit OTP\" variant=\"outlined\" value={state.otp} onChange={e => changeOtp(e.target.value)} />\n      </Grid>\n      <Grid container justify=\"space-between\">\n        <Grid item lg={6}>\n        <Button className={classes.button} id=\"otp\" variant=\"contained\" color=\"primary\" onClick={submitOtp}\n          disabled={state.isLoading}>\n          Submit OTP\n        </Button>\n        </Grid>\n        <Grid item lg={6}>\n        <Button className={classes.button} id=\"otp\" variant=\"contained\"\n          color={retryEnabled?\"primary\":\"default\"}\n          onClick={triggerOtp}\n          disabled={!retryEnabled || state.isLoading}>\n          {`Retry ${retryEnabled?'':'('+retryTimeString+')'}`}\n        </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport const renderSuccessStage = (classes) => {\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"body2\">\n          <Box fontWeight=\"fontWeightBold\" color=\"success.main\">\n            SLOT BOOKED\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n        <Box fontWeight=\"fontWeightBold\">\n          Your vaccinated slot has been booked\n        </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        {getRedirectElement(classes)}\n      </Grid>\n    </Grid>\n  )\n};\n\nexport const renderVaccinatedStage = (classes) => {\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"body2\">\n          <Box fontWeight=\"fontWeightBold\" color=\"success.main\">\n            VACCINATED\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n        <Box fontWeight=\"fontWeightBold\">\n          You have been vaccinated\n        </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        {getRedirectElement(classes)}\n      </Grid>\n    </Grid>\n  )\n};\n\nexport const renderExistingBookingStage = ({ classes, enterAlternatePhoneInitStage,\n  goToHome, autoCallBackState }) => {\n    const alternateNumberElement = getAlternateNumberElement(classes, enterAlternatePhoneInitStage, goToHome);\n    return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"body2\">\n          <Box fontWeight=\"fontWeightBold\" color=\"success.main\">\n            SLOT BOOKED\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n        <Box fontWeight=\"fontWeightBold\">\n          You have a slot booking\n        </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        {autoCallBackState.isTimerOn &&\n          <Typography>\n            ⌛ Taking you back in {autoCallBackState.callBackDelayInSeconds}\n          </Typography>}\n      </Grid>\n      {alternateNumberElement}\n    </Grid>\n  )\n};\n\nconst getBookingActionElement = (bookingAttempt, classes) => {\n  if (bookingAttempt < MAX_BOOKING_ATTEMPT) {\n    return getRetryElement(classes);\n  }\n  return getRedirectElement(classes);\n}\n\nexport const renderBookingFailedStage = (state, bookingAttempt, classes) => {\n  const bookingActionElement = getBookingActionElement(bookingAttempt, classes);\n\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"body2\">\n          <Box fontWeight=\"fontWeightBold\" color=\"secondary.main\">\n            BOOKING FAILED\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n        <Box fontWeight=\"fontWeightBold\">\n          All slots booked before your booking\n        </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        {bookingActionElement}\n      </Grid>\n    </Grid>\n  )\n};\n\nconst getErrorMessage = (state) => {\n  const errCode = _.get(state.errorObj, 'code');\n  if (errCode === ERROR_CODE.NO_BENEFICIARY || errCode === COWIN_ERROR_CODE.NO_BENEFICIARY) {\n    return (<Typography variant=\"h6\">\n    <Box fontWeight=\"fontWeightBold\">\n      Your registration on CoWin Portal is pending.\n      Please register first so that you can book slots.\n    </Box>\n    </Typography>);\n  }\n  return (<Typography variant=\"body2\">\n    <Box fontWeight=\"fontWeightBold\" color=\"secondary.main\">\n      SOMETHING WENT WRONG\n    </Box>\n  </Typography>);\n};\n\nexport const renderErrorStage = (state, classes) => {\n  const errorMessage = getErrorMessage(state);\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        {errorMessage}\n      </Grid>\n      <Grid item lg={12}>\n        {getRedirectElement(classes)}\n      </Grid>\n    </Grid>\n  )\n};\n\nexport const renderRegisteredStage = ({ classes, enterAlternatePhoneInitStage,\n  goToHome, autoCallBackState }) => {\n  const alternateNumberElement = getAlternateNumberElement(classes, enterAlternatePhoneInitStage, goToHome);\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"body2\">\n          <Box fontWeight=\"fontWeightBold\" color=\"success.main\">\n            STATUS CONFIRMED\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n        <Box fontWeight=\"fontWeightBold\">\n          You have registered on CoWin portal. Please book a slot for vaccination soon.\n        </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        {autoCallBackState.isTimerOn &&\n          <Typography>\n            ⌛ Taking you back in {autoCallBackState.callBackDelayInSeconds}\n          </Typography>}\n      </Grid>\n      {alternateNumberElement}\n    </Grid>\n  )\n};\n\nexport const renderNotRegiseteredState = (params) => {\n  const { classes, registeredPhone, enterAlternatePhoneInitStage, goToHome, autoCallBackState } = params;\n  const alternateNumberElement = getAlternateNumberElement(classes, enterAlternatePhoneInitStage, goToHome);\n  return (\n    <Grid alignItems=\"center\" justify=\"center\">\n      <Grid item lg={12}>\n        <Typography variant=\"subtitle2\">\n          <Box color=\"#FF0000\" fontWeight=\"fontWeightBold\">\n            Vaccination pending\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n            <Box fontWeight=\"fontWeightBold\" my={2}>\n              No vaccination registration found for {registeredPhone}\n              {autoCallBackState.isTimerOn &&\n                <Typography>\n                  ⌛ Taking you back in {autoCallBackState.callBackDelayInSeconds}\n                </Typography>\n              }\n            </Box>\n        </Typography>\n      </Grid>\n      {alternateNumberElement}\n    </Grid>\n  )\n};\n\nexport const renderAlternatePhoneInitState = (classes, state, submitRegisteredPhone, changeRegisteredPhone, confirmRegisteredPhone) => {\n  return (\n    <Grid alignItems=\"center\" justify=\"center\" direction=\"column\">\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n            <Box fontWeight=\"fontWeightBold\" my={2}>\n              Enter phone number used for Vaccination\n            </Box>\n        </Typography>\n      </Grid>\n      <Grid item lg={12}>\n        <TextField\n          maxLength={10}\n          fullWidth={true}\n          size=\"small\"\n          type=\"number\"\n          id=\"alternatePhone\"\n          label=\"Vaccination Phone Number\"\n          variant=\"outlined\"\n          value={state.registeredPhone}\n          onChange={e => changeRegisteredPhone(e.target.value)}\n        />\n      </Grid>\n      <Grid item lg={12}>\n        <Button className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth={true}\n          id=\"confirmRegisteredPhone\"\n          onClick={confirmRegisteredPhone}>\n          <Typography variant=\"subtitle1\">\n              Send OTP\n          </Typography>\n        </Button>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport const renderPhoneNumberConfirmation = (classes, state, submitRegisteredPhone, enterAlternatePhoneInitStage) => {\n  return (\n    <Grid container alignItems=\"center\" justify=\"center\" direction=\"column\">\n      <Grid item lg={12} justify=\"center\">\n        <SvgIcon component={QuestionIcon} overflow=\"visible\" />\n      </Grid>\n      <Grid item lg={12}>\n        <Typography variant=\"h6\">\n          <Box fontWeight=\"fontWeightBold\" my={2}>\n            Are you sure you used {state.registeredPhone} for Vaccination?\n          </Box>\n        </Typography>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\" spacing={1}>\n        <Grid item xs={6}>\n          <Button className={classes.button}\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth={true}\n            id=\"submitRegisteredPhone\"\n            onClick={submitRegisteredPhone}>\n            <Typography variant=\"subtitle2\">\n              Yes\n            </Typography>\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button className={classes.button}\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth={true}\n            id=\"declineRegisteredPhone\"\n            onClick={enterAlternatePhoneInitStage}>\n            <Typography variant=\"subtitle2\">\n              No\n            </Typography>\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n};","import React, { useState, useEffect } from 'react';\nimport { withRouter } from \"react-router\";\nimport * as _ from 'lodash';\nimport { SECRET_KEYS, PROCESS_STAGE, API_URLS, ERROR_CODE, COWIN_ERROR_CODE,\n  OTP_RETRY_TIME, MAX_BOOKING_ATTEMPT, INVALID_PHONE_REASONS_TEXT, DEFAULT_AUTO_CALLBACK_STATE } from './constants';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makePostCall } from './utils/network';\nimport { fetchBenficiaries } from './booking/beneficiary';\nimport { fetchSlots } from './booking/slot';\nimport { getSearchParamsFromUrl } from './utils/queryParams';\nimport { triggerCallback } from './webCallback';\nimport Image from './assests/build4bharat.jpg';\nimport Box from '@material-ui/core/Box';\nimport { renderOtpStage, renderCaptchStage, renderSuccessStage, renderExistingBookingStage,\n  renderBookingFailedStage, renderVaccinatedStage, renderErrorStage, renderRegisteredStage,\n  renderNotRegiseteredState, renderAlternatePhoneInitState, renderPhoneNumberConfirmation } from './stateView';\nconst shajs = require('sha.js');\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: '#B2EBFE',\n    width: '100%'\n  },\n  image: {\n    overflowY: 'hidden',\n    width: '100%'\n  },\n  card: {\n    flexGrow: 1,\n    width: '90%',\n    minHeight: '25%',\n    margin: 'auto',\n    padding: '5%',\n    position: 'absolute',\n    bottom: 0\n  },\n  button: {\n    marginTop: 10,\n    borderRadius: 12\n  },\n  goHomeButton: {\n    marginTop: 20\n  },\n  body: {\n    marginTop: '5%',\n  }\n});\n\nfunction getRandomSecretKey() {\n  const index = parseInt((Math.random()*10))%6;\n  return SECRET_KEYS[index];\n}\n\nfunction App(props) {\n  const searchParams = getSearchParamsFromUrl(props.location.search);\n  const initialStage = _.isEmpty(searchParams.phone) ? PROCESS_STAGE.ALTERNATE_PHONE_INIT : PROCESS_STAGE.INIT;\n  const [state, setState] = useState({...searchParams,\n    stage: initialStage, otp: '', registeredPhone: _.get(searchParams, 'phone'),\n    lastPhone: _.get(searchParams, 'phone'), registeredBeneficiaryList: [] });\n  const [retryTime, setRetryTime] = useState(OTP_RETRY_TIME);\n  const [bookingAttempt, setBookingAttempt] = useState(1);\n  const [autoCallBackState, setAutoCallBackState] = useState(DEFAULT_AUTO_CALLBACK_STATE);\n\n  const stateCallback = (updatedState) => {\n    setState({...state, ...updatedState});\n  };\n  const changeOtp = (otp) => {\n    setState({...state, otp});\n  };\n\n  const triggerOtp = async () => {\n    const secretKey = getRandomSecretKey();\n    setRetryTime(OTP_RETRY_TIME);\n    try {\n      const data = await makePostCall(API_URLS.INIT, {\n        \"mobile\": state.registeredPhone,\n        \"secret\": secretKey\n      }, stateCallback);\n      setState({...state, txnId: data.txnId, stage: PROCESS_STAGE.VALIDATE_OTP});\n    } catch(err) {\n      \n    }\n  };\n  const submitOtp = async () => {\n    const otpHash = shajs('sha256').update(state.otp).digest('hex');\n    try {\n      const data = await makePostCall(API_URLS.VALIDATE_OTP, {\n        \"otp\": otpHash,\n        \"txnId\": state.txnId\n      }, stateCallback);\n      setState({...state, token: data.token, errorObj: {}, stage: PROCESS_STAGE.FETCH_BENEFICIARY });\n    } catch(err) {\n    }\n  };\n\n  const scheduleSlot = async () => {\n    try {\n      const data = await makePostCall(API_URLS.SCHEDULE, {\n        \"beneficiaries\": [state.beneficiaryDetails.beneficiary_reference_id],\n        \"center_id\": state.vaccineSlot.center_id,\n        \"slot\": state.vaccineSlot.slot_time,\n        \"session_id\": state.vaccineSlot.session_id,\n        \"dose\": _.isEmpty(state.beneficiaryDetails.dose1_date)?1:2\n      }, stateCallback, state.token);\n      const appointmentId = _.get(data, 'appointment_confirmation_no');\n      if (!_.isEmpty(appointmentId)) {\n        setState({...state, errorObj:{}, stage: PROCESS_STAGE.SLOT_BOOKED, appointmentId })\n      } else {\n        setState({...state, errorObj:{ code: ERROR_CODE.BOOKING_FAILED, message: 'Appointment not confirmed' } })\n      }\n    } catch(err) {\n    }\n  };\n\n  const changeRegisteredPhone = (registeredPhone) => {\n    setState({ ...state, registeredPhone });\n  };\n\n  const submitRegisteredPhone =  () => {\n    const activePhone = state.registeredPhone;\n    if (_.size(activePhone) !== 10) {\n      setState({ ...state, errorObj: {\n        code: ERROR_CODE.INVALID_PHONE,\n        message: INVALID_PHONE_REASONS_TEXT.DEFAULT\n      }});\n      return;\n    }\n\n    setState({ ...state, stage: PROCESS_STAGE.INIT, lastPhone: state.registeredPhone });\n  };\n\n  const enterAlternatePhoneInitStage = () => {\n    setState({ ...state, \n      stage: PROCESS_STAGE.ALTERNATE_PHONE_INIT,\n      otp: '',\n      errorObj: null,\n      registeredPhone: ''\n    });\n  };\n\n  const confirmRegisteredPhone = () => {\n    setState({ ...state,\n      stage: PROCESS_STAGE.CONFIRM_PHONE\n    });\n  }\n\n  const goToHome = () => {\n    triggerCallback(state, 0);\n  };\n\n  const renderErrorItem = () => {\n    if (_.isEmpty(_.get(state.errorObj, 'message')) || _.get(state, 'stage') === PROCESS_STAGE.NOT_REGISTERED) {\n      return null;\n    }\n    return (\n      <Grid alignItems=\"center\" justify=\"center\">\n        <Grid item lg={12}>\n        <Typography color=\"error\">\n          <Box fontWeight=\"fontWeightBold\">\n            {state.errorObj.message}\n          </Box>\n          </Typography>\n        </Grid>\n      </Grid>\n    )\n  };\n  const getRenderView = (classes) => {\n      switch(state.stage) {\n      case PROCESS_STAGE.SLOT_BOOKED:\n        return renderSuccessStage(classes);\n      case PROCESS_STAGE.VACCINATED:\n        return renderVaccinatedStage(classes);  \n      case PROCESS_STAGE.EXISTING_BOOKING:\n        return renderExistingBookingStage({ classes, enterAlternatePhoneInitStage,\n          goToHome, autoCallBackState });\n      case PROCESS_STAGE.BOOKING_FAILED:\n        return renderBookingFailedStage(state, bookingAttempt, classes);\n      case PROCESS_STAGE.ERROR:\n        return renderErrorStage(state, classes);\n      case PROCESS_STAGE.REGISTERED:\n        return renderRegisteredStage({ classes, registeredPhone: state.registeredPhone,\n          enterAlternatePhoneInitStage, goToHome, autoCallBackState });\n      case PROCESS_STAGE.NOT_REGISTERED:\n        return renderNotRegiseteredState({ classes, registeredPhone: state.registeredPhone, \n          enterAlternatePhoneInitStage, goToHome, autoCallBackState });\n      case PROCESS_STAGE.ALTERNATE_PHONE_INIT:\n        return renderAlternatePhoneInitState(classes, state, submitRegisteredPhone, changeRegisteredPhone, confirmRegisteredPhone);\n      case PROCESS_STAGE.CONFIRM_PHONE:\n        return renderPhoneNumberConfirmation(classes, state, submitRegisteredPhone, enterAlternatePhoneInitStage);\n      default:\n        return renderOtpStage({state, retryTime, classes, changeOtp, submitOtp, triggerOtp, enterAlternatePhoneInitStage});\n    }\n  }\n  const handleBookingFailure = () => {\n    setState({...state, errorObj: {}, stage: PROCESS_STAGE.BOOKING_FAILED});\n    if (bookingAttempt < MAX_BOOKING_ATTEMPT) {\n      const intervalId = setTimeout(() => {\n        setBookingAttempt(bookingAttempt+1);\n      }, 3000);\n      return () => clearInterval(intervalId);\n    } else {\n      triggerCallback({...state, stage: PROCESS_STAGE.BOOKING_FAILED});\n    }\n  };\n  useEffect(() => {\n    switch(state.stage) {\n      case PROCESS_STAGE.INIT:\n        if (state.registeredPhone) {\n          triggerOtp();\n        }\n        break;\n      case PROCESS_STAGE.FETCH_BENEFICIARY:\n        fetchBenficiaries(state, stateCallback);\n        break;\n      case PROCESS_STAGE.FETCH_SLOTS:\n        fetchSlots(state, stateCallback);\n        break;\n      case PROCESS_STAGE.SCHEDULE:\n        scheduleSlot(state, stateCallback);\n        break;\n      case PROCESS_STAGE.SLOT_BOOKED:\n      case PROCESS_STAGE.VACCINATED:\n      case PROCESS_STAGE.ERROR:\n        triggerCallback(state);\n        break;\n      case PROCESS_STAGE.NOT_REGISTERED:\n      case PROCESS_STAGE.REGISTERED:\n      case PROCESS_STAGE.EXISTING_BOOKING:\n        setAutoCallBackState({ ...DEFAULT_AUTO_CALLBACK_STATE, isTimerOn: true });\n        return;\n      default:\n        break;\n    }\n\n    setAutoCallBackState(DEFAULT_AUTO_CALLBACK_STATE);\n  }, [state.stage]);\n  useEffect(() => {\n    const code = _.get(state.errorObj, 'code');\n    if (!code) {\n      return;\n    }\n\n    switch (state.stage) {\n      case PROCESS_STAGE.FETCH_BENEFICIARY:\n        setState({ ...state, stage: PROCESS_STAGE.NOT_REGISTERED });\n        return;\n      default: break;\n    };\n\n    switch(state.errorObj.code) {\n      case ERROR_CODE.INVALID_PHONE:\n        return;\n      case COWIN_ERROR_CODE[ERROR_CODE.INVALID_OTP]:\n        return;\n      case COWIN_ERROR_CODE[ERROR_CODE.EXISTING_BOOKING]:\n        setState({...state, stage: PROCESS_STAGE.EXISTING_BOOKING });\n        return;\n      case COWIN_ERROR_CODE[ERROR_CODE.NO_BENEFICIARY]:\n        setState({ ...state, stage: PROCESS_STAGE.NOT_REGISTERED });\n        return;\n      case ERROR_CODE.NO_SLOT:\n        handleBookingFailure();\n        return;\n      case ERROR_CODE.NO_BENEFICIARY:\n        return;\n      default:\n        if (state.stage === PROCESS_STAGE.SCHEDULE) {\n          handleBookingFailure();\n        } else {\n          setState({...state, stage: PROCESS_STAGE.ERROR });\n        }\n       return;\n    };\n  }, [state.errorObj]);\n  useEffect(() => {\n    if (!retryTime) return;\n    const intervalId = setTimeout(() => {\n      setRetryTime(retryTime-1);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [retryTime])\n  useEffect(() => {\n    if (state.stage === PROCESS_STAGE.BOOKING_FAILED) {\n      setState({...state, errorObj: {}, captcha:'', stage: PROCESS_STAGE.FETCH_SLOTS});\n    }\n  }, [bookingAttempt])\n  useEffect(() => {\n    if (!autoCallBackState.isTimerOn) {\n      return;\n    }\n    if (autoCallBackState.callBackDelayInSeconds <= 0) {\n      triggerCallback(state, 0);\n      return;\n    }\n\n    const intervalId = setTimeout(() => {\n      setAutoCallBackState({\n        ...autoCallBackState,\n        callBackDelayInSeconds: autoCallBackState.callBackDelayInSeconds - 1\n      });\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [autoCallBackState])\n\n  const classes = useStyles();\n  const renderView = getRenderView(classes);\n  const errorItem = renderErrorItem(); \n  return (\n    <div className={classes.root}>\n      <img src={`${Image}`} className={classes.image} />\n      <Card className={classes.card}>\n        {errorItem}\n        {state.isLoading && <CircularProgress />}\n        {renderView}\n      </Card>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}